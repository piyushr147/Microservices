server:
  port: 8081

spring:
  application:
    name: "cards"
  datasource:
    #url: jdbc:mysql://localhost:3306/accountsdb # These are config details for mysql
    #username: root
    #password: root
    url: jdbc:h2:mem:testdb  # In-memory database (data is lost on restart)
    driverClassName: org.h2.Driver
    username: sa
    password:
  h2:
    console:
      enabled: true  # Enable H2 web console
      path: /h2-console  # Default path for H2 console
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update  # Auto-create tables
    show-sql: true
  sql:
    init:
      mode: always
  profiles:
    active:
      "qa"
  config:
    import: "optional:configserver:http://localhost:8071/" #This is the port where config server is running locally.
  cloud:
    bus:
      enabled: true #Allow application to propagate configuration changes and events across distributed microservices using a message broker like RabbitMQ or Kafka
  rabbitmq: #This configures Spring Boot to connect to a RabbitMQ broker running on localhost (port 5672) using the default guest/guest credentials.
    host: localhost
    port: 5672
    username: guest
    password: guest

build:
  version: "1.0"

accounts:
  message: "This is the contact file for dev accounts env"
  info:
    name: "Piyush Rawat"
    email: "piyushkumar9818@gmail.com"
  contact:
    +917982031328
    +919650745365

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    shutdown:
      access: unrestricted
  info:
    env:
      enabled: true

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

info:
  app:
    name: "cards"
    description: "Cards Application"
    version: "1.0.0"