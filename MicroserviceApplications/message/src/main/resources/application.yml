server:
  port: 8090

spring:
  application:
    name: "message"
  cloud:
    function:
      # Function chaining: message flows from `email` function to `sms` function
      definition: email|sms
    stream:
      bindings:
        emailsms-in-0:
          # Kafka topic to receive from (kafka)
          # Queue (exchange) from which to receive messages (rabbitmq)
          destination: send-communication
          #Consumer group name = "message", used for load balancing and offset tracking (kafka)
          # Consumer group = "message", helps RabbitMQ set up dedicated queue per group (rabbitmq)
          group: ${spring.application.name}
        emailsms-out-0:
          #Outgoing messages will be sent to this Kafka topic (kafka)
          # Queue (exchange) to which the output will be sent (rabbitmq)
          destination: communication-sent
      kafka:
        binder:
          #Kafka broker address; the app connects to this to produce and consume messages
          brokers: "localhost:9092"
  rabbitmq:
    host: localhost
    port: 5672
    stream:
      username: guest
      password: guest
